#region Copyright Header
// Copyright (c) 2017 Adeptive Software Corporation. All rights reserved. This
// software and documentation constitute an unpublished work and contain
// valuable trade secrets and proprietary information belonging to Adeptive
// Software Corporation (ASC). None of the foregoing material may be copied,
// duplicated or disclosed without the express written permission of ASC. ASC
// EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES CONCERNING THIS SOFTWARE AND
// DOCUMENTATION, INCLUDING ANY WARRANTIES OF MERCHANTABILITY AND/OR FITNESS
// FOR ANY PARTICULAR PURPOSE, AND WARRANTIES OF PERFORMANCE, AND ANY WARRANTY
// THAT MIGHT OTHERWISE ARISE FROM COURSE OF DEALING OR USAGE OF TRADE. NO
// WARRANTY IS EITHER EXPRESS OR IMPLIED WITH RESPECT TO THE USE OF THE
// SOFTWARE OR DOCUMENTATION. Under no circumstances shall ASC be liable for
// incidental, special, indirect, direct or consequential damages or loss of
// profits, interruption of business, or related expenses which may arise from
// use of software or documentation, including but not limited to those
// resulting from defects in software and/or documentation, or loss inaccuracy
// of data of any kind.
// 
#endregion    

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ServiceModel;
using ReceiveNote.Models;

namespace Adeptive.ResWare.Services
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveNoteData", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    public partial class ReceiveNoteData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> CoordinatorTypeIDField;
        
        private int CurativeIDField;
        
        private Adeptive.ResWare.Services.ReceiveCurativeTypeEnum CurativeTypeField;
        
        private Adeptive.ResWare.Services.ReceiveNoteDocument[] DocumentsField;
        
        private string FileNumberField;
        
        private string NoteBodyField;
        
        private string NoteSubjectField;
        
        private int ToCoordinatorIDField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CoordinatorTypeID
        {
            get
            {
                return this.CoordinatorTypeIDField;
            }
            set
            {
                this.CoordinatorTypeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurativeID
        {
            get
            {
                return this.CurativeIDField;
            }
            set
            {
                this.CurativeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Adeptive.ResWare.Services.ReceiveCurativeTypeEnum CurativeType
        {
            get
            {
                return this.CurativeTypeField;
            }
            set
            {
                this.CurativeTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Adeptive.ResWare.Services.ReceiveNoteDocument[] Documents
        {
            get
            {
                return this.DocumentsField;
            }
            set
            {
                this.DocumentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FileNumber
        {
            get
            {
                return this.FileNumberField;
            }
            set
            {
                this.FileNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteBody
        {
            get
            {
                return this.NoteBodyField;
            }
            set
            {
                this.NoteBodyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteSubject
        {
            get
            {
                return this.NoteSubjectField;
            }
            set
            {
                this.NoteSubjectField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToCoordinatorID
        {
            get
            {
                return this.ToCoordinatorIDField;
            }
            set
            {
                this.ToCoordinatorIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveCurativeTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    public enum ReceiveCurativeTypeEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PRE_CLOSING = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLICY = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveNoteDocument", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    public partial class ReceiveNoteDocument : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescriptionField;
        
        private byte[] DocumentBodyField;
        
        private int DocumentTypeIDField;
        
        private string FileNameField;
        
        private bool InternalOnlyField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte[] DocumentBody
        {
            get
            {
                return this.DocumentBodyField;
            }
            set
            {
                this.DocumentBodyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int DocumentTypeID
        {
            get
            {
                return this.DocumentTypeIDField;
            }
            set
            {
                this.DocumentTypeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InternalOnly
        {
            get
            {
                return this.InternalOnlyField;
            }
            set
            {
                this.InternalOnlyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveNoteResponse", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    public partial class ReceiveNoteResponse : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        private Adeptive.ResWare.Services.ReceiveNoteResponseCode ResponseCodeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Adeptive.ResWare.Services.ReceiveNoteResponseCode ResponseCode
        {
            get
            {
                return this.ResponseCodeField;
            }
            set
            {
                this.ResponseCodeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveNoteResponseCode", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    public enum ReceiveNoteResponseCode : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESS = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_LOGIN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_FILE_NUMBER = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOWN_FOR_MAINTENANCE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOTE_ERROR = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_ERROR = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SECURITY_ERROR = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNEXPECTED_ERROR = 10,
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IReceiveNoteService")]
public interface IReceiveNoteService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/ReceiveNote", ReplyAction="http://tempuri.org/IReceiveNoteService/ReceiveNoteResponse")]
    Adeptive.ResWare.Services.ReceiveNoteResponse ReceiveNote(Adeptive.ResWare.Services.ReceiveNoteData NoteData);

    [OperationContract]
    ICollection<NoteDocServiceResult> GetAllNotesAndDocs();

    [OperationContract]
    NoteDocServiceResult GetNoteDocById(Guid id);

    [OperationContract]
    int DeleteNoteDocById(Guid id);

    [OperationContract]
    int UpdateNoteDoc(NoteDocServiceResult noteDocServiceResult);

}
