//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReswareOrderMonitorService.ReswareNoteDocs {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveNoteData", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    [System.SerializableAttribute()]
    internal partial class ReceiveNoteData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CoordinatorTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurativeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReswareOrderMonitorService.ReswareNoteDocs.ReceiveCurativeTypeEnum CurativeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteDocument[] DocumentsField;
        
        private string FileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToCoordinatorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<int> CoordinatorTypeID {
            get {
                return this.CoordinatorTypeIDField;
            }
            set {
                if ((this.CoordinatorTypeIDField.Equals(value) != true)) {
                    this.CoordinatorTypeIDField = value;
                    this.RaisePropertyChanged("CoordinatorTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int CurativeID {
            get {
                return this.CurativeIDField;
            }
            set {
                if ((this.CurativeIDField.Equals(value) != true)) {
                    this.CurativeIDField = value;
                    this.RaisePropertyChanged("CurativeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal ReswareOrderMonitorService.ReswareNoteDocs.ReceiveCurativeTypeEnum CurativeType {
            get {
                return this.CurativeTypeField;
            }
            set {
                if ((this.CurativeTypeField.Equals(value) != true)) {
                    this.CurativeTypeField = value;
                    this.RaisePropertyChanged("CurativeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteDocument[] Documents {
            get {
                return this.DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                    this.DocumentsField = value;
                    this.RaisePropertyChanged("Documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string FileNumber {
            get {
                return this.FileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNumberField, value) != true)) {
                    this.FileNumberField = value;
                    this.RaisePropertyChanged("FileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string NoteBody {
            get {
                return this.NoteBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteBodyField, value) != true)) {
                    this.NoteBodyField = value;
                    this.RaisePropertyChanged("NoteBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string NoteSubject {
            get {
                return this.NoteSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteSubjectField, value) != true)) {
                    this.NoteSubjectField = value;
                    this.RaisePropertyChanged("NoteSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int ToCoordinatorID {
            get {
                return this.ToCoordinatorIDField;
            }
            set {
                if ((this.ToCoordinatorIDField.Equals(value) != true)) {
                    this.ToCoordinatorIDField = value;
                    this.RaisePropertyChanged("ToCoordinatorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveCurativeTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    internal enum ReceiveCurativeTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PRE_CLOSING = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLICY = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveNoteDocument", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    [System.SerializableAttribute()]
    internal partial class ReceiveNoteDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private byte[] DocumentBodyField;
        
        private int DocumentTypeIDField;
        
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InternalOnlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal byte[] DocumentBody {
            get {
                return this.DocumentBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentBodyField, value) != true)) {
                    this.DocumentBodyField = value;
                    this.RaisePropertyChanged("DocumentBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool InternalOnly {
            get {
                return this.InternalOnlyField;
            }
            set {
                if ((this.InternalOnlyField.Equals(value) != true)) {
                    this.InternalOnlyField = value;
                    this.RaisePropertyChanged("InternalOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveNoteResponse", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    [System.SerializableAttribute()]
    internal partial class ReceiveNoteResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        private ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteResponseCode ResponseCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        internal ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteResponseCode ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((this.ResponseCodeField.Equals(value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiveNoteResponseCode", Namespace="http://schemas.datacontract.org/2004/07/Adeptive.ResWare.Services")]
    internal enum ReceiveNoteResponseCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESS = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_LOGIN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_FILE_NUMBER = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOWN_FOR_MAINTENANCE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOTE_ERROR = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_ERROR = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SECURITY_ERROR = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNEXPECTED_ERROR = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoteDocServiceResult", Namespace="http://schemas.datacontract.org/2004/07/ReceiveNote.Models")]
    [System.SerializableAttribute()]
    internal partial class NoteDocServiceResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReswareOrderMonitorService.ReswareNoteDocs.DocumentServiceResult[] DocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProcessedDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal ReswareOrderMonitorService.ReswareNoteDocs.DocumentServiceResult[] Documents {
            get {
                return this.DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentsField, value) != true)) {
                    this.DocumentsField = value;
                    this.RaisePropertyChanged("Documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FileNumber {
            get {
                return this.FileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNumberField, value) != true)) {
                    this.FileNumberField = value;
                    this.RaisePropertyChanged("FileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string NoteBody {
            get {
                return this.NoteBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteBodyField, value) != true)) {
                    this.NoteBodyField = value;
                    this.RaisePropertyChanged("NoteBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string NoteSubject {
            get {
                return this.NoteSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteSubjectField, value) != true)) {
                    this.NoteSubjectField = value;
                    this.RaisePropertyChanged("NoteSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Processed {
            get {
                return this.ProcessedField;
            }
            set {
                if ((this.ProcessedField.Equals(value) != true)) {
                    this.ProcessedField = value;
                    this.RaisePropertyChanged("Processed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Nullable<System.DateTime> ProcessedDateTime {
            get {
                return this.ProcessedDateTimeField;
            }
            set {
                if ((this.ProcessedDateTimeField.Equals(value) != true)) {
                    this.ProcessedDateTimeField = value;
                    this.RaisePropertyChanged("ProcessedDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentServiceResult", Namespace="http://schemas.datacontract.org/2004/07/ReceiveNote.Models")]
    [System.SerializableAttribute()]
    internal partial class DocumentServiceResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid NoteIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal byte[] DocumentBody {
            get {
                return this.DocumentBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentBodyField, value) != true)) {
                    this.DocumentBodyField = value;
                    this.RaisePropertyChanged("DocumentBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int DocumentTypeId {
            get {
                return this.DocumentTypeIdField;
            }
            set {
                if ((this.DocumentTypeIdField.Equals(value) != true)) {
                    this.DocumentTypeIdField = value;
                    this.RaisePropertyChanged("DocumentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid NoteId {
            get {
                return this.NoteIdField;
            }
            set {
                if ((this.NoteIdField.Equals(value) != true)) {
                    this.NoteIdField = value;
                    this.RaisePropertyChanged("NoteId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReswareNoteDocs.IReceiveNoteService")]
    internal interface IReceiveNoteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/ReceiveNote", ReplyAction="http://tempuri.org/IReceiveNoteService/ReceiveNoteResponse")]
        ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteResponse ReceiveNote(ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteData NoteData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/ReceiveNote", ReplyAction="http://tempuri.org/IReceiveNoteService/ReceiveNoteResponse")]
        System.Threading.Tasks.Task<ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteResponse> ReceiveNoteAsync(ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteData NoteData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/GetAllNotesAndDocs", ReplyAction="http://tempuri.org/IReceiveNoteService/GetAllNotesAndDocsResponse")]
        ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult[] GetAllNotesAndDocs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/GetAllNotesAndDocs", ReplyAction="http://tempuri.org/IReceiveNoteService/GetAllNotesAndDocsResponse")]
        System.Threading.Tasks.Task<ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult[]> GetAllNotesAndDocsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/GetNoteDocById", ReplyAction="http://tempuri.org/IReceiveNoteService/GetNoteDocByIdResponse")]
        ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult GetNoteDocById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/GetNoteDocById", ReplyAction="http://tempuri.org/IReceiveNoteService/GetNoteDocByIdResponse")]
        System.Threading.Tasks.Task<ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult> GetNoteDocByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/DeleteNoteDocById", ReplyAction="http://tempuri.org/IReceiveNoteService/DeleteNoteDocByIdResponse")]
        int DeleteNoteDocById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/DeleteNoteDocById", ReplyAction="http://tempuri.org/IReceiveNoteService/DeleteNoteDocByIdResponse")]
        System.Threading.Tasks.Task<int> DeleteNoteDocByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/UpdateNoteDoc", ReplyAction="http://tempuri.org/IReceiveNoteService/UpdateNoteDocResponse")]
        int UpdateNoteDoc(ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult noteDocServiceResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReceiveNoteService/UpdateNoteDoc", ReplyAction="http://tempuri.org/IReceiveNoteService/UpdateNoteDocResponse")]
        System.Threading.Tasks.Task<int> UpdateNoteDocAsync(ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult noteDocServiceResult);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IReceiveNoteServiceChannel : ReswareOrderMonitorService.ReswareNoteDocs.IReceiveNoteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class ReceiveNoteServiceClient : System.ServiceModel.ClientBase<ReswareOrderMonitorService.ReswareNoteDocs.IReceiveNoteService>, ReswareOrderMonitorService.ReswareNoteDocs.IReceiveNoteService {
        
        public ReceiveNoteServiceClient() {
        }
        
        public ReceiveNoteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReceiveNoteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiveNoteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiveNoteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteResponse ReceiveNote(ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteData NoteData) {
            return base.Channel.ReceiveNote(NoteData);
        }
        
        public System.Threading.Tasks.Task<ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteResponse> ReceiveNoteAsync(ReswareOrderMonitorService.ReswareNoteDocs.ReceiveNoteData NoteData) {
            return base.Channel.ReceiveNoteAsync(NoteData);
        }
        
        public ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult[] GetAllNotesAndDocs() {
            return base.Channel.GetAllNotesAndDocs();
        }
        
        public System.Threading.Tasks.Task<ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult[]> GetAllNotesAndDocsAsync() {
            return base.Channel.GetAllNotesAndDocsAsync();
        }
        
        public ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult GetNoteDocById(System.Guid id) {
            return base.Channel.GetNoteDocById(id);
        }
        
        public System.Threading.Tasks.Task<ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult> GetNoteDocByIdAsync(System.Guid id) {
            return base.Channel.GetNoteDocByIdAsync(id);
        }
        
        public int DeleteNoteDocById(System.Guid id) {
            return base.Channel.DeleteNoteDocById(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteNoteDocByIdAsync(System.Guid id) {
            return base.Channel.DeleteNoteDocByIdAsync(id);
        }
        
        public int UpdateNoteDoc(ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult noteDocServiceResult) {
            return base.Channel.UpdateNoteDoc(noteDocServiceResult);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNoteDocAsync(ReswareOrderMonitorService.ReswareNoteDocs.NoteDocServiceResult noteDocServiceResult) {
            return base.Channel.UpdateNoteDocAsync(noteDocServiceResult);
        }
    }
}
